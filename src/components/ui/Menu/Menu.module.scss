@import '@/styles/shared-imports.scss';

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: rem($menuHeightMobile);
  padding: 0 rem($globalPaddingMobile);
  color: var(--color-white-lilac);
  position: relative;
  z-index: z('menu');

  @include above('desktop') {
    height: vw($menuHeightDesktop);
    padding: 0 vw(40);
  }
}

.logo {
  font-size: rem(30);
  font-weight: 400;
  letter-spacing: vw(2);
  z-index: z('above');

  @include above('desktop') {
    font-size: vw(30);
  }
}

.slash {
  color: var(--color-radical-red);
}

.button {
  z-index: z('above');

  @include above('desktop') {
    text-transform: uppercase;
    letter-spacing: vw(4);
    font-size: vw(18);
    font-weight: 400;
    display: flex;
    gap: vw(30);
    align-items: center;
  }

  @include isHoverable {
    &:hover {
      color: var(--color-radical-red);
    }
  }
}

.buttonTexts {
  display: none;

  @include above('desktop') {
    position: relative;
    display: initial;
  }
}

.buttonText {
  @include above('desktop') {
    @include transition(0.1s);

    opacity: 0;
    transition-property: opacity, color;

    &.menuText {
      position: absolute;
      top: 0;
      right: 0;
    }

    &.isVisible {
      opacity: 1;
    }
  }
}

.burger {
  position: relative;
  width: rem(35);

  @include above('desktop') {
    width: vw(35);
  }
}

.burgerLine {
  @include transition;

  height: rem(2.5);
  background: var(--color-white-lilac);
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  transition-property: transform, width;

  @include above('desktop') {
    height: vw(2.5);
  }

  &.first {
    transform: translateY(rem(-10));
    width: 75%;

    @include above('desktop') {
      transform: translateY(vw(-10));
    }

    @include isHoverable {
      .button:hover & {
        width: 100%;
      }
    }

    .button.isOpen & {
      transform: rotate(45deg);
      width: 100%;
    }
  }

  &.middle {
    .button.isOpen & {
      transform: scaleX(0);
    }
  }

  &.last {
    transform: translateY(rem(10));
    width: 75%;
    left: initial;
    right: 0;

    @include above('desktop') {
      transform: translateY(vw(10));
    }

    @include isHoverable {
      .button:hover & {
        width: 100%;
      }
    }

    .button.isOpen & {
      transform: rotate(-45deg);
      width: 100%;
    }
  }

  @include isHoverable {
    transition-property: transform, width, background;

    .button:hover & {
      background: var(--color-radical-red);
    }
  }
}

.nav {
  @include position-fit(fixed);
  @include flex-center;

  font-size: rem(40);
  font-weight: 600;
  pointer-events: none;
  padding: 0 rem($globalPaddingMobile);
  text-align: center;

  @include above('desktop') {
    font-size: vw(40);
    padding: 0 vw($globalPaddingDesktop);
  }

  &::before {
    @include position-fit;
    @include transition;

    content: '';
    background: var(--color-black);
    opacity: 0;
    transform: translateY(-100%);
    transition-property: opacity, transform;
  }

  &.isOpen::before {
    opacity: 1;
    transform: translateY(0);
  }

  &.isOpen {
    pointer-events: auto;
  }
}

.list {
  @include flex-center(column);
  @include transition;

  gap: rem(20);
  position: relative;
  opacity: 0;
  transition-property: opacity;

  @include above('desktop') {
    gap: vw(20);
  }

  .nav.isOpen & {
    opacity: 1;
  }
}

.item {
  @include isHoverable {
    @include transition;

    transition-property: color;

    &:hover {
      color: var(--color-radical-red);
    }
  }
}
